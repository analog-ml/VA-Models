// *  BSIM-CMG 112.0.0beta4 released on 11/08/2024                            *
// *  BSIM Common Multi-Gate Model (Verilog-A)                                *
// ****************************************************************************

// ****************************************************************************
// *  Copyright Â© 2024 University of California                               *
// *                                                                          *
// *  Project director: Prof. Sayeef Salahuddin                               *
// *                    Prof. Chenming Hu                                     *
// *                                                                          *
// *  Developers: https://www.bsim.berkeley.edu/models/bsimcmg/auth_cmg/      *
// ****************************************************************************

// Parameter checking

if (Weff0 <= 1.0e-9) begin
    $strobe("Warning: Weff0 = %g <= 1.0e-9.", Weff0);
end

if (WeffCV0 <= 1.0e-9) begin
    $strobe("Warning: WeffCV0 = %g <= 1.0e-9.", WeffCV0);
end

if (NBODY_i <= 0.0) begin
    $error("Fatal: Effective  nbody = %g is not positive.", NBODY_i);
end else if (NBODY_i <= 1.0e18) begin
    $strobe("Warning: NBODY_i = %g m^-3 may be too small.", NBODY_i);
end

if (NGATE_i < 0.0) begin
    $error("Fatal: Effective  ngate = %g is negative.", NGATE_i);
end else if (NGATE_i != 0.0 && NGATE_i <= 1.0e24) begin
    $strobe("Warning: Effective  ngate = %g may be too small.", NGATE_i);
end else if (NGATE_i > 1.0e31) begin
    $error("Fatal: Effective  ngate = %g is too high.", NGATE_i);
end

if (DVT0_i < 0.0) begin
    $strobe("Warning: Effective  dvt0 = %g is negative.", DVT0_i);
end

if (PHIG_i <= 0.0) begin
    $error("Fatal: Effective phig = %g is not positive.", PHIG_i);
end

if (VSAT_i <= 0.0) begin
    $error("Fatal: Effective vsat = %g is not positive.", VSAT_i);
end

if (VSAT1_i <= 0.0) begin
    $error("Fatal: Effective vsat1 = %g is not positive.", VSAT1_i);
end

if (asymmod != 0 && VSAT1R_i <= 0.0) begin
    $error("Fatal: Effective vsat1r = %g is not positive.", VSAT1R_i);
end

if (DVT1_i <= 0.0) begin
    $error("Fatal: Effective dvt1 = %g is not positive.", DVT1_i);
end

if (DVT1SS_i <= 0.0) begin
    $error("Fatal: Effective dvt1ss = %g is not positive.", DVT1SS_i);
end

if (CDSC_i < 0.0) begin
    $strobe("Warning: Effective cdsc = %g is negative.", CDSC_i);
end

if (CDSCD_i < 0.0) begin
    $strobe("Warning: Effective cdscd = %g is negative.", CDSCD_i);
end

if (asymmod != 0 && CDSCDR_i < 0.0) begin
    $strobe("Warning: Effective cdscdr = %g is negative.", CDSCDR_i);
end

if (DSUB_i <= 0.0) begin
    $error("Fatal: Effective dsub = %g is not positive.", DSUB_i);
end

if (ETA0_i < 0.0) begin
    $strobe("Warning: Effective eta0 = %g is negative, setting it to 0", ETA0_i);
    ETA0_i = 0.0;
end

if (ETA0R_i < 0.0) begin
    $strobe("Warning: Effective eta0r = %g is negative, setting it to 0", ETA0R_i);
    ETA0R_i = 0.0;
end

if (LPE0_i < -Leff) begin
    $strobe("Warning: Effective lpe0 = %g is less than -Leff. Clipping LPE0_i to 0", LPE0_i);
    LPE0_i = 0.0;
end

if (K0SI_i < 0.0) begin
    $strobe("Warning: Effective k0si = %g is negative, setting it to 0.", K0SI_i);
    K0SI_i = 0.0;
end

if (K2SI_i < 0.0) begin
    $strobe("Warning: Effective k2si = %g is negative, setting it to 0.", K2SI_i);
    K2SI_i = 0.0;
end

if (bulkmod != 0 && PHIBE_i < 0.2) begin
    $strobe("Warning: Effective phibe = %g is less than 0.2, setting it to 0.2.", PHIBE_i);
    PHIBE_i = 0.2;
end

if (bulkmod != 0 && PHIBE_i > 1.2) begin
    $strobe("Warning: Effective phibe = %g is larger than 1.2, setting it to 1.2.", PHIBE_i);
    PHIBE_i = 1.2;
end

if (PSAT_i < 2.0) begin
    $strobe("Warning: Effective psat = %g is less than 2.0, setting it to 2.0.", PSAT_i);
    PSAT_i = 2.0;
end

if (PSATCV_i < 2.0) begin
    $strobe("Warning: Effective psatcv = %g is less than 2.0, setting it to 2.0.", PSATCV_i);
    PSATCV_i = 2.0;
end

if (U0_i < 0.0) begin
    $strobe("Warning: Effective u0 = %g is negative, setting it to the default value.", U0_i);
    U0_i = 0.03;
end

if (UA_i < 0.0) begin
    $strobe("Warning: Effective ua = %g is negative, setting it to 0.", UA_i);
    UA_i = 0.0;
end

if (EU_i < 0.0) begin
    $strobe("Warning: Effective eu = %g is negative, setting it to 0.", EU_i);
    EU_i = 0.0;
end

if (UD_i < 0.0) begin
    $strobe("Warning: Effective ud = %g is negative, setting it to 0.", UD_i);
    UD_i = 0.0;
end

if (UCS_i < 0.0) begin
    $strobe("Warning: Effective ucs = %g is negative, setting it to 0.", UCS_i);
    UCS_i = 0.0;
end

if (ETAMOB_i < 0.0) begin
    $strobe("Warning: Effective etamob = %g is negative, setting it to 0", ETAMOB_i);
    ETAMOB_i = 0.0;
end

if (RDSW_i < 0.0) begin
    $strobe("Warning: Effective rdsw = %g is negative, setting it to 0", RDSW_i);
    RDSW_i = 0.0;
end

if (RSW_i < 0.0) begin
    $strobe("Warning: Effective rsw = %g is negative, setting it to 0", RSW_i);
    RSW_i = 0.0;
end

if (RDW_i < 0.0) begin
    $strobe("Warning: Effective rdw = %g is negative, setting it to 0", RDW_i);
    RDW_i = 0.0;
end

if (PRWGD_i < 0.0) begin
    $strobe("Warning: Effective prwgd = %g is negative, setting it to 0", PRWGD_i);
    PRWGD_i = 0.0;
end

if (PRWGS_i < 0.0) begin
    $strobe("Warning: Effective prwgs = %g is negative, setting it to 0", PRWGS_i);
    PRWGS_i = 0.0;
end

if (PCLM_i < 0.0) begin
    $strobe("Warning: Effective pclm = %g is negative.", PCLM_i);
end

if (PDIBL1_i < 0.0) begin
    $strobe("Warning: Effective pdibl1 = %g is negative.", PDIBL1_i);
end

if (asymmod != 0) begin
    if (PDIBL1R_i < 0.0) begin
        $strobe("Warning: Effective pdibl1r = %g is negative.", PDIBL1R_i);
    end
    if (PDIBL2R_i < 0.0) begin
        $strobe("Warning: Effective pdibl2r = %g is negative.", PDIBL2R_i);
    end
    if (U0R_i < 0) begin
        $strobe("Warning: Effective u0r = %g is negative, setting it to 0.", U0R_i);
        U0R_i = 0.0;
    end
    if (UAR_i < 0.0) begin
        $strobe("Warning: Effective uar = %g is negative, setting it to 0.", UAR_i);
        UAR_i = 0.0;
    end
    if (EUR_i < 0.0) begin
        $strobe("Warning: Effective eur = %g is negative, setting it to 0.", EUR_i);
        EUR_i = 0.0;
    end
    if (UDR_i < 0.0) begin
        $strobe("Warning: Effective udr = %g is negative, setting it to 0.", UDR_i);
        UDR_i = 0.0;
    end
end

if (PDIBL2_i < 0.0) begin
    $strobe("Warning: Effective pdibl2 = %g is negative.", PDIBL2_i);
end

if (DROUT_i <= 0.0) begin
    $error("Fatal: Effective drout = %g is non-positive.", DROUT_i);
end

if (MEXP_i < 2.0) begin
    $strobe("Warning: Effective mexp = %g < 2. Setting MEXP_i = 2.", MEXP_i);
    MEXP_i = 2.0;
end

if (asymmod != 0) begin
    if (MEXPR_i < 2.0) begin
        $strobe("Warning: Effective mexpr = %g < 2. Setting MEXPR_i = 2.", MEXPR_i);
        MEXPR_i = 2.0;
    end
end

if (PTWG_i < 0.0) begin
    $strobe("Warning: Effective ptwg = %g is negative, setting it to 0.", PTWG_i);
    PTWG_i = 0.0;
end

if (CGIDL_i < 0.0) begin
    $strobe("Warning: Effective cgidl = %g < 0. Setting CGIDL_i = 0.", CGIDL_i);
    CGIDL_i = 0.0;
end

if (CGISL_i < 0.0) begin
    $strobe("Warning: Effective cgisl = %g < 0. Setting CGISL_i = 0.", CGISL_i);
    CGISL_i = 0.0;
end

if (igbmod != 0) begin
    if (NIGBINV_i <= 0.0) begin
        $error("Fatal: Effective nigbinv = %g is non-positive.", NIGBINV_i);
    end
    if (NIGBACC_i <= 0.0) begin
        $error("Fatal: Effective nigbacc = %g is non-positive.", NIGBACC_i);
    end
end

if (igcmod != 0) begin
    if (POXEDGE_i <= 0.0) begin
        $error("Fatal: Effective poxedge = %g is non-positive.", POXEDGE_i);
    end
    if (PIGCD_i <= 0.0) begin
        $error("Fatal: Effective pigcd = %g is non-positive.", PIGCD_i);
    end
end

if (igcmod != 0 || igbmod != 0) begin
    if (toxref <= 0.0) begin
        $error("Fatal: toxref = %g is non-positive.", toxref);
    end
end

if (lintigen >= (Leff / 2.0)) begin
    $strobe("Warning: lintigen = %g is too large - Leff for r/g current is negative. Re-setting lintigen = 0.", lintigen);
    LINTIGEN_i = 0.0;
end else begin
    LINTIGEN_i = lintigen;
end

if (NTGEN_i <= 0.0) begin
    $error("Fatal: Effective ntgen = %g is non-positive.", NTGEN_i);
end

if (nqsmod == 1 && XRCRG1_i != 0.0) begin
    if (XRCRG1_i < 1.0e-3) begin
        $strobe("Warning: Effective xrcrg1 = %g. Gate resistance may be too large. Disabling NQS Gate Resistance.", XRCRG1_i);
        XRCRG1_i = 0.0;
    end
end

if (iimod == 2) begin
    if (BETAII0_i < 0.0) begin
        $strobe("Warning: Effective betaii0 = %g is negative.", BETAII0_i);
    end
    if (BETAII1_i < 0.0) begin
        $strobe("Warning: Effective betaii1 = %g is negative.", BETAII1_i);
    end
    if (BETAII2_i < 0.0) begin
        $strobe("Warning: Effective betaii2 = %g is negative.", BETAII2_i);
    end
    if (ESATII_i < 0.0) begin
        $strobe("Warning: Effective esatii = %g is negative.", ESATII_i);
    end
    if (LII_i < 0.0) begin
        $strobe("Warning: Effective lii = %g is negative.", LII_i);
    end
    if (SII1_i < 0.0) begin
        $strobe("Warning: Effective sii1 = %g is negative.", sii1);
    end
    if (SII2_i < 0.0) begin
        $strobe("Warning: Effective sii2 = %g is negative.", SII2_i);
    end
    if (SIID_i < 0.0) begin
        $strobe("Warning: Effective siid = %g is negative.", SIID_i);
    end
end

if (ef <= 0.0) begin
    $error("Fatal: ef = %g is non-positive.", ef);
end else if (ef > 2.0) begin
    $error("Fatal: ef = %g > 2.0.", ef);
end

if (CGSL_i < 0.0) begin
    $strobe("Warning: Effective cgsl = %g is negative. Setting it to 0 ", CGSL_i);
    CGSL_i = 0.0;
end

if (CGDL_i < 0.0) begin
    $strobe("Warning: Effective cgdl = %g is negative. Setting it to 0 ", CGDL_i);
    CGDL_i = 0.0;
end

if (CFS_i < 0.0) begin
    $strobe("Warning: Effective cfs = %g is negative. Setting it to 0 ", CFS_i);
    CFS_i = 0.0;
end

if (CFD_i < 0.0) begin
    $strobe("Warning: Effective cfd = %g is negative. Setting it to 0 ", CFD_i);
    CFD_i = 0.0;
end

if (CGBL_i < 0.0) begin
    $strobe("Warning: Effective cgbl = %g is negative. Setting it to 0 ", CGBL_i);
    CGBL_i = 0.0;
end

if (CKAPPAS_i <= 0.02) begin
    $strobe("Warning: Effective ckappas = %g is too small. Setting it to 0.02 ", CKAPPAS_i);
    CKAPPAS_i = 0.02;
end

if (CKAPPAD_i <= 0.02) begin
    $strobe("Warning: Effective ckappad = %g is too small. Setting it to 0.02 ", CKAPPAD_i);
    CKAPPAD_i = 0.02;
end

if (CKAPPAB_i <= 0.02) begin
    $strobe("Warning: Effective ckappab = %g is too small. Setting it to 0.02 ", CKAPPAB_i);
    CKAPPAB_i = 0.02;
end
